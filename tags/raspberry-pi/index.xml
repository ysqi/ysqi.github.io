<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberry Pi on 虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/raspberry-pi.html</link>
    <description>Recent content in Raspberry Pi on 虞双齐的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <copyright>虞双齐 | &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备14032560号&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 31 Dec 2016 11:35:02 +0800</lastBuildDate>
    
	<atom:link href="https://yushuangqi.com/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>树莓派上编译Goand安装Cow</title>
      <link>https://yushuangqi.com/blog/2016/shu-mei-pa-shang-bian-yi--go-and-an-zhuang--cow.html</link>
      <pubDate>Sat, 31 Dec 2016 11:35:02 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/shu-mei-pa-shang-bian-yi--go-and-an-zhuang--cow.html</guid>
      <description>PS:老Blog文章转移, 年代久远, 连接可能已失效. Cow 是不错的软件，相当好用，我在公司是直接把它挂到了服务器上，然后办公室的人都在用它。但是</description>
    </item>
    
    <item>
      <title>RaspberryPiwithGolang</title>
      <link>https://yushuangqi.com/blog/2016/raspberry-pi-with-go-lang.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:58 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/raspberry-pi-with-go-lang.html</guid>
      <description>// This program achieves LED blink on Raspberry Pi with Go lang. // This is implemented with hard-coding and uses only main function. package main import ( &amp;quot;fmt&amp;quot; &amp;quot;os&amp;quot; &amp;quot;time&amp;quot; ) func main() { // Initialize GPIO25 fmt.Println(&amp;quot;Initialize GPIO25&amp;quot;) fd, err := os.OpenFile(&amp;quot;/sys/class/gpio/export&amp;quot;, os.O_WRONLY|os.O_SYNC, 0666) if err != nil { fmt.Println(&amp;quot;open /sys/class/gpio/export fails&amp;quot;) fmt.Println(err) return } fmt.Fprint(fd, &amp;quot;25&amp;quot;) fd.Close() // Check iinitialization result fmt.Println(&amp;quot;Check initialization result&amp;quot;) _, err = os.Stat(&amp;quot;/sys/class/gpio/gpio25&amp;quot;)</description>
    </item>
    
  </channel>
</rss>