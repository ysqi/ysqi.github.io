<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编译原理 on 虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html</link>
    <description>Recent content in 编译原理 on 虞双齐的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <copyright>虞双齐 | &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备14032560号&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 17 Feb 2017 08:17:15 +0800</lastBuildDate>
    
	<atom:link href="https://yushuangqi.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go1_8rc3源代码学习:token</title>
      <link>https://yushuangqi.com/blog/2017/go-1_8rc3-yuan-dai-ma-xue-xi-token.html</link>
      <pubDate>Fri, 17 Feb 2017 08:17:15 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2017/go-1_8rc3-yuan-dai-ma-xue-xi-token.html</guid>
      <description>https://segmentfault.com/a/ 前言 token package 包含了 golang 词法分析相关的数据结构和方法，源代码位于 &amp;lt;go-src&amp;gt;/src/go/token token.go 源代码中的注释很赞！ Token type Token is the set of lexical tokens of the Go programming language type Token int tokens The list of tokens（t</description>
    </item>
    
    <item>
      <title>Go1_8rc3源代码学习:scanner</title>
      <link>https://yushuangqi.com/blog/2017/go-1_8rc3-yuan-dai-ma-xue-xi-scanner.html</link>
      <pubDate>Fri, 17 Feb 2017 08:17:14 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2017/go-1_8rc3-yuan-dai-ma-xue-xi-scanner.html</guid>
      <description>https://segmentfault.com/a/ 前言 scanner package 包含了 golang 词法分析器相关的数据结构和方法，源代码位于 &amp;lt;go-src&amp;gt;/src/go/scanner example_test.go example_test.go 包含了一个使用 scanner 包的示例方法，该方法对 Euler 公式进行词法扫描 func ExampleScanner_Scan() { // src is the input that</description>
    </item>
    
    <item>
      <title>Go1_8rc3源代码学习:parser</title>
      <link>https://yushuangqi.com/blog/2017/go-1_8rc3-yuan-dai-ma-xue-xi-parser.html</link>
      <pubDate>Fri, 17 Feb 2017 08:17:13 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2017/go-1_8rc3-yuan-dai-ma-xue-xi-parser.html</guid>
      <description>https://segmentfault.com/a/ 前言 parser package 包含了 golang 语法分析相关的数据结构和方法，源代码位于 &amp;lt;go-src&amp;gt;/src/go/parser 之前大概看了点 PHP 和 Ruby 的源代码，感叹 go 确实如宣传的一样，简洁如 C，parser.g</description>
    </item>
    
    <item>
      <title>MiniJava语言编译器的Golang实现。</title>
      <link>https://yushuangqi.com/blog/2016/minijavayu-yan-bian-yi-qi-de-golangshi-xian-.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:18 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/minijavayu-yan-bian-yi-qi-de-golangshi-xian-.html</guid>
      <description>Dog-comp Abstract 文章介绍一个编译器的实现流程。源语言选用MiniJava. MiniJava是一个面向对象语言，支持继承，对象创建等面向对象的特性。具体语</description>
    </item>
    
  </channel>
</rss>