<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql on 虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/sql.html</link>
    <description>Recent content in Sql on 虞双齐的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <copyright>虞双齐 | &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备14032560号&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 17 Feb 2017 08:17:16 +0800</lastBuildDate>
    
	<atom:link href="https://yushuangqi.com/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TiDB架构的演进和开发哲学</title>
      <link>https://yushuangqi.com/blog/2017/tidb-jia-gou-de-yan-jin-he-kai-fa-zhe-xue.html</link>
      <pubDate>Fri, 17 Feb 2017 08:17:16 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2017/tidb-jia-gou-de-yan-jin-he-kai-fa-zhe-xue.html</guid>
      <description>https://segmentfault.com/a/ 本文来自 CSDN《程序员》2017 年 2 月的封面报道。 对于一个从零开始的数据库来说：选择什么语言，整体架构怎么做，要不要开源，如何去测试…太</description>
    </item>
    
    <item>
      <title>关于Golang中database_sql包的学习笔记</title>
      <link>https://yushuangqi.com/blog/2016/guan-yu-golangzhong-database_sqlbao-de-xue-xi-bi-ji.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:24 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/guan-yu-golangzhong-database_sqlbao-de-xue-xi-bi-ji.html</guid>
      <description>因为最近在学习Go，所以找了revel这个框架来学习，感觉和php的面向对象有很大不同。revel没有提供db mapping的组件，所以在g</description>
    </item>
    
    <item>
      <title>GolangSQL操作初体验</title>
      <link>https://yushuangqi.com/blog/2016/golang-sql-cao-zuo-chu-ti-yan.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:05 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/golang-sql-cao-zuo-chu-ti-yan.html</guid>
      <description>https://segmentfault.com/a/ 简介 Golang 提供了 database/sql 包用于对 SQL 的数据库的访问, 在这个包中, 最重要的自然就是 sql.DB 了. 对于 sql.DB, 我们需要强调的是, 它并不代表一个数据库连接, 它是一个已存在</description>
    </item>
    
    <item>
      <title>分布式系统测试那些事儿-理念</title>
      <link>https://yushuangqi.com/blog/2016/fen-bu-shi-ji-tong-ce-shi-na-xie-shi-er--li-nian.html</link>
      <pubDate>Sat, 31 Dec 2016 11:32:42 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/fen-bu-shi-ji-tong-ce-shi-na-xie-shi-er--li-nian.html</guid>
      <description>https://segmentfault.com/a/ 本文整理自 PingCAP NewSQL Meetup 第 26 期刘奇分享的《深度探索分布式系统测试》议题现场实录。 文章较长，为方便大家阅读，会分为上中下三篇，本文为上篇。 今天主要是</description>
    </item>
    
    <item>
      <title>BeegoOrmInsert记录时报错</title>
      <link>https://yushuangqi.com/blog/2015/beego-orm-insert-error.html</link>
      <pubDate>Fri, 18 Sep 2015 08:22:13 +0000</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2015/beego-orm-insert-error.html</guid>
      <description>前几天在使用Beego的ORM往Mysql中写入数据时失败，这里记录下原因。 当时代码是这样写的 o,err := orm.NewOrm() if err!=nil{ return err } record := &amp;amp;models.User{} err=o.Insert(&amp;amp;record) if err!=nil { return err } 在执行此代</description>
    </item>
    
  </channel>
</rss>