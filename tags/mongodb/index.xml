<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongodb on 虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/mongodb.html</link>
    <description>Recent content in Mongodb on 虞双齐的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <copyright>虞双齐 | &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备14032560号&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 24 May 2017 09:17:27 +0800</lastBuildDate>
    
	<atom:link href="https://yushuangqi.com/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>谈谈一些关于mgo的用法</title>
      <link>https://yushuangqi.com/blog/2017/tan-tan-yi-xie-guan-yu-mgode-yong-fa.html</link>
      <pubDate>Wed, 24 May 2017 09:17:27 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2017/tan-tan-yi-xie-guan-yu-mgode-yong-fa.html</guid>
      <description>前言 最近在项目中使用mongodb进行简单的数据分析，在使用mongodb驱动mgo时遇到一些问题，比如在mongodb中执行命令成功，到了</description>
    </item>
    
    <item>
      <title>Golangmgo驱动指定Mongo服务器读取</title>
      <link>https://yushuangqi.com/blog/2016/golang-mgoqu-dong-zhi-ding-mongofu-wu-qi-dou-qu.html</link>
      <pubDate>Sat, 31 Dec 2016 11:35:01 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/golang-mgoqu-dong-zhi-ding-mongofu-wu-qi-dou-qu.html</guid>
      <description>Replica Sets搭建 服务器采用Replica Sets搭建，可参考Deploy a Replica Set 读模式 Mongod的读模式共有五种： primary. 在主节点上进行所有的读操作</description>
    </item>
    
    <item>
      <title>golang--mgo解析各种数据类型分析</title>
      <link>https://yushuangqi.com/blog/2016/golang----mgojie-xi-ge-chong-shu-ju-lei-xing-fen-xi.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:45 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/golang----mgojie-xi-ge-chong-shu-ju-lei-xing-fen-xi.html</guid>
      <description>https://segmentfault.com/a/ package main import ( &amp;quot;gopkg.in/mgo.v2&amp;quot; &amp;quot;log&amp;quot; &amp;quot;reflect&amp;quot; ) func main() { session, err := mgo.Dial(&amp;quot;usr:pwd@127.0.0.1:27017/dbname&amp;quot;) if err != nil { log.Fatal(&amp;quot;无法打开MongoDB！&amp;quot;) return } defer session.Close() clt := session.DB(&amp;quot;mydb&amp;quot;).C(&amp;quot;userinfo&amp;quot;) type row struct { UserName, Telephone string</description>
    </item>
    
    <item>
      <title>利用mongo的findAndModify原子性操作实现autoincrementID</title>
      <link>https://yushuangqi.com/blog/2016/li-yong-mongode-findandmodifyyuan-zi-xing-cao-zuo-shi-xian-auto-increment-id.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:44 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/li-yong-mongode-findandmodifyyuan-zi-xing-cao-zuo-shi-xian-auto-increment-id.html</guid>
      <description>https://segmentfault.com/a/ 实际情况 默认情况下，mongo使用_id自动生成uniq id，而且在mongo自带的命令里，无法指定一个自增字段。自增字段在多线程时必须是</description>
    </item>
    
  </channel>
</rss>