<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on 虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/json.html</link>
    <description>Recent content in Json on 虞双齐的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <copyright>虞双齐 | &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备14032560号&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 17 Feb 2017 08:17:15 +0800</lastBuildDate>
    
	<atom:link href="https://yushuangqi.com/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jsoniter0_9_8发布:JSON性能对标Protobuf</title>
      <link>https://yushuangqi.com/blog/2017/jsoniter-0_9_8-fa-bu--json-xing-neng-dui-biao--protobuf.html</link>
      <pubDate>Fri, 17 Feb 2017 08:17:15 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2017/jsoniter-0_9_8-fa-bu--json-xing-neng-dui-biao--protobuf.html</guid>
      <description>Jsoniter 是一款快且灵活的 JSON 解析器，同时提供 Java 和 Go 两个版本。 最近发布的 0.9.8 版本对性能对标 Jackson 和 Protobuf 进行了详细的评测： https://github.com/json-itera&amp;hellip; 。性能优化的原理会近期会发布于 infoq 中文</description>
    </item>
    
    <item>
      <title>Golang中JSON的使用</title>
      <link>https://yushuangqi.com/blog/2016/golangzhong-jsonde-shi-yong.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:25 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/golangzhong-jsonde-shi-yong.html</guid>
      <description>https://segmentfault.com/a/ GO Json author: qcliu date: 2015/07/21 Abstrct 介绍go语言中json的使用 json json是一种传输格式，类似与XML，与XML相比可读性略差，但是传输效率高。 GO Json go语言中提</description>
    </item>
    
    <item>
      <title>Go抓取网页数据并存入MySQL和返回json数据&amp;amp;lt;一&amp;amp;gt;</title>
      <link>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-ampltyi-ampgt.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:15 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-ampltyi-ampgt.html</guid>
      <description>前言 很久前就想学习GO，但是由于准备读研和要实习就一直耽搁没动手，只是偶尔看一下相关的基本语法，并没有将其具体地运用到实际的编码中。大四了，</description>
    </item>
    
    <item>
      <title>Go抓取网页数据并存入MySQL和返回json数据&lt;二&gt;</title>
      <link>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-amplter-ampgt.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:14 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-amplter-ampgt.html</guid>
      <description>上一节已经说明了要做什么，以及整个小程序的目录结构，接下来就开始编码部分。 首先在入口文件中引入项目下的包crawldata,然后调用其中抓取</description>
    </item>
    
    <item>
      <title>Go抓取网页数据并存入MySQL和返回json数据&lt;三&gt;</title>
      <link>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-ampltsan-ampgt.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:13 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-ampltsan-ampgt.html</guid>
      <description>上一节主要实现了使用 goquery 从图片网站 [](http://www.gratisography.com/)http://www.gratisography.com/ 抓取数据。主要抓取图片的data-original、width、height、alt、type 五项数据。因</description>
    </item>
    
    <item>
      <title>Go抓取网页数据并存入MySQL和返回json数据&lt;四&gt;</title>
      <link>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-ampltsi-ampgt.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:13 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/gozhua-qu-wang-xie-shu-ju-bing-cun-ru-mysqlhe-fan-hui-jsonshu-ju-ampltsi-ampgt.html</guid>
      <description>上一节已将将需要的数据从网站[](http://www.gratisography.com/)http://www.gratisograph</description>
    </item>
    
    <item>
      <title>Golang流式解析Json</title>
      <link>https://yushuangqi.com/blog/2016/golang-liu-shi-jie-xi--json.html</link>
      <pubDate>Sat, 31 Dec 2016 11:32:46 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/golang-liu-shi-jie-xi--json.html</guid>
      <description>json-iterator 库：https://github.com/json-iterator/go 动机 现有的golang解析json的库都是push模式的，缺少一</description>
    </item>
    
    <item>
      <title>golangjson解析器哪家强？</title>
      <link>https://yushuangqi.com/blog/2016/golang-json-jie-xi-qi-na-jia-jiang-.html</link>
      <pubDate>Sat, 31 Dec 2016 11:32:43 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/golang-json-jie-xi-qi-na-jia-jiang-.html</guid>
      <description>全文链接： https://github.com/json-iterator/go-benchmark 目的不是推销 json-iterator 。而是证明 json-iterator 不比其他的库更慢，从而使得大家可以把吐槽点放到其他方面：比如特性是不是齐全， api 是不是友好。重新发明 json 解</description>
    </item>
    
  </channel>
</rss>