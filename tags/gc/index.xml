<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gc on 虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/gc.html</link>
    <description>Recent content in Gc on 虞双齐的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <copyright>虞双齐 | &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备14032560号&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 31 Dec 2016 11:34:05 +0800</lastBuildDate>
    
	<atom:link href="https://yushuangqi.com/tags/gc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[译]CockroachDBGC优化总结</title>
      <link>https://yushuangqi.com/blog/2016/yi--cockroachdb-gcyou-hua-zong-jie.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:05 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/yi--cockroachdb-gcyou-hua-zong-jie.html</guid>
      <description>几周前我们分享了一个帖子讲述我们为什么选择Go语言编写CockroachDB，我们收到一些问题，询问我们是如何解决Go语言的一些已知问题，特</description>
    </item>
    
    <item>
      <title>GC垃圾回收机制:浅析与理解</title>
      <link>https://yushuangqi.com/blog/2016/gcla-ji-hui-shou-ji-zhi--jian-xi-yu-li-jie.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:29 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/gcla-ji-hui-shou-ji-zhi--jian-xi-yu-li-jie.html</guid>
      <description>GC垃圾回收机制： 浅析与理解 对垃圾回收进行分析前，我们先来了解一些基本概念 基本概念 内存管理：内存管理对于编程语言至关重要。汇编允许你操作所有</description>
    </item>
    
    <item>
      <title>从Baa开发中总结Go语言性能渐进优化</title>
      <link>https://yushuangqi.com/blog/2016/cong-baakai-fa-zhong-zong-jie-goyu-yan-xing-neng-jian-jin-you-hua.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:28 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/cong-baakai-fa-zhong-zong-jie-goyu-yan-xing-neng-jian-jin-you-hua.html</guid>
      <description>在Go生态已经有很多WEB框架，但感觉没有一个符合我们的想法，我们想要一个简洁高效的核心框架，提供路由，context，中间件和依赖注入，而</description>
    </item>
    
  </channel>
</rss>