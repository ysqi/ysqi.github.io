<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concurrency on 虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/concurrency.html</link>
    <description>Recent content in Concurrency on 虞双齐的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <copyright>虞双齐 | &lt;a href=&#39;https://beian.miit.gov.cn/&#39;&gt;粤ICP备14032560号&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 31 Dec 2016 11:34:45 +0800</lastBuildDate>
    
	<atom:link href="https://yushuangqi.com/tags/concurrency/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Goforgophers</title>
      <link>https://yushuangqi.com/blog/2016/go-for-gophers.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:45 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/go-for-gophers.html</guid>
      <description>注：该文是作者 Andrew Gerrand 在 GopherCon closing keynote 25 April 2014 上的演讲，原文地址为 Go for gophers 注：这个是视频集合 Watch the talk on YouTube，赞伟大的长城，需要翻墙INGINGING</description>
    </item>
    
    <item>
      <title>Go语言并发模型:像UnixPipe那样使用channel</title>
      <link>https://yushuangqi.com/blog/2016/goyu-yan-bing-fa-mo-xing-xiang-unix-pipena-yang-shi-yong-channel.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:13 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/goyu-yan-bing-fa-mo-xing-xiang-unix-pipena-yang-shi-yong-channel.html</guid>
      <description>简介 Go语言的并发原语允许开发者以类似于 Unix Pipe 的方式构建数据流水线 (data pipelines)，数据流水线能够高效地利用 I/O和多核 CPU 的优势。 本文要</description>
    </item>
    
    <item>
      <title>Go语言并发模型:使用select</title>
      <link>https://yushuangqi.com/blog/2016/goyu-yan-bing-fa-mo-xing-shi-yong--select.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:07 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/goyu-yan-bing-fa-mo-xing-shi-yong--select.html</guid>
      <description>简介 作为一种现代语言，go语言实现了对并发的原生支持。上几期文章中，我们对goroutine 和 channel进行了详细的讲解。但是要实现对 channel</description>
    </item>
    
    <item>
      <title>入门goroutine并发设计模式以及goroutine可视化工具</title>
      <link>https://yushuangqi.com/blog/2016/ru-men-goroutinebing-fa-she-ji-mo-shi-yi-ji-goroutineke-shi-hua-gong-ju.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:00 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/ru-men-goroutinebing-fa-she-ji-mo-shi-yi-ji-goroutineke-shi-hua-gong-ju.html</guid>
      <description>Daisy-Chain 首先，为了防止过于枯燥，我先列出我最喜欢的一个模式：Daisy-Chain。这个模式比较复杂，对go的并发编程不太熟悉的同学，可以先看下面</description>
    </item>
    
  </channel>
</rss>